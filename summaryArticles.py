# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'summaryArticles.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import mysql
from PyQt5 import QtCore, QtGui, QtWidgets

import MySQLDB
import SQLiteDB
import sqlite3
from newspaper import Article

#db = SQLiteDB.SQLDb()
db = MySQLDB.MYSQLDb()
titles = db.get_data()


class Ui_MainWindowSummary(object):
    def setupUiSummary(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(503, 674)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.comboBoxArticles = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxArticles.setGeometry(QtCore.QRect(10, 230, 481, 31))
        self.comboBoxArticles.setCurrentText("")
        self.comboBoxArticles.setObjectName("comboBoxArticles")
        self.comboBoxArticles.addItems(titles)
        self.Logo = QtWidgets.QLabel(self.centralwidget)
        self.Logo.setGeometry(QtCore.QRect(10, -30, 491, 221))
        self.Logo.setText("")
        self.Logo.setPixmap(QtGui.QPixmap("uct_original_logo.jpg"))
        self.Logo.setObjectName("Logo")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 190, 471, 31))
        self.label.setObjectName("label")
        self.pushButtonSubmit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonSubmit.setGeometry(QtCore.QRect(180, 590, 93, 28))
        self.pushButtonSubmit.setObjectName("pushButtonSubmit")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(10, 280, 471, 281))
        font = QtGui.QFont()
        font.setFamily("Constantia")
        font.setPointSize(10)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 503, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Summary"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p><span style=\" font-size:12pt; color:#00007f;\">Please select an article to get the summary</span></p></body></html>"))
        self.pushButtonSubmit.setText(_translate("MainWindow", "SUBMIT"))
        self.pushButtonSubmit.clicked.connect(self.summary)

    def summary(self):
        title = self.comboBoxArticles.currentText()
        conn = mysql.connector.connect(user='Admin', password='UCT123@!',
                                       host='10.0.0.185',
                                       database='overview')
        c = conn.cursor()
        sql_command = "SELECT link FROM articles WHERE title = %s"
        c.execute(sql_command, (title,))  # Passes string sql command and value from button
        records = c.fetchall()
        url = records[0]
        url = url[0]
        print(url)

        article = Article(url)
        article.download()
        try:
            article.parse()
            article.nlp()
            summary = article.summary
            print(summary)
            self.textEdit.clear()
            self.textEdit.insertPlainText(summary)
        except Exception as e:
            print("<>", e)  # DEBUGGING PURPOSES


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindowSummary()
    ui.setupUiSummary(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

