# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ArticlePage.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from matplotlib.pyplot import title

import MySQLDatabaseModified
import SQLiteDBModified

#db = SQLiteDBModified.SQLDbModified()
db = MySQLDatabaseModified.MySQLDbModified()
from sentencesPage import *


class Ui_Article(object):
    def setupArticle(self, MainWindow, month):
        self.currentMonth = month
        self.sentimentsMonth = month.replace('description', 'sentiments')
        titles = db.getArticlesForMonth(self.currentMonth)
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(516, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.UCTTLogo = QtWidgets.QLabel(self.centralwidget)
        self.UCTTLogo.setGeometry(QtCore.QRect(20, 10, 541, 141))
        self.UCTTLogo.setText("")
        self.UCTTLogo.setPixmap(QtGui.QPixmap("images/uct_original_logo.jpg"))
        self.UCTTLogo.setObjectName("UCTTLogo")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(130, 170, 431, 41))
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(60, 210, 401, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItems(titles)
        self.pushButtonBar = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonBar.setGeometry(QtCore.QRect(200, 410, 101, 51))
        self.pushButtonBar.setStyleSheet("font: 75 10pt \"Cambria\";")
        self.pushButtonBar.setObjectName("pushButtonBar")
        self.pushButtonPosNeg = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonPosNeg.setGeometry(QtCore.QRect(120, 480, 301, 51))
        self.pushButtonPosNeg.setStyleSheet("font: 75 10pt \"Cambria\";")
        self.pushButtonPosNeg.setObjectName("pushButtonNegative")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 516, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p><span style=\" font-size:14pt; color:#00007f;\">Please select an article</span></p></body></html>"))
        self.pushButtonBar.setText(_translate("MainWindow", "Bar Graph"))
        self.pushButtonPosNeg.setText(_translate("MainWindow", "Positive/Negative Sentences"))

        self.pushButtonBar.clicked.connect(self.getArticleBarGraph)
        self.pushButtonPosNeg.clicked.connect(self.sentencePage)

    def getArticleBarGraph(self):
        title = self.comboBox.currentText()
        print(title)
        db.articleBarGraph(title, self.currentMonth)

    # Open the next page where we can display the positive and negative sentences
    # pass the title and the month
    def sentencePage(self):
        title = self.comboBox.currentText()
        month = self.sentimentsMonth
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_sentences()
        self.ui.setupSentences(self.window, title, month)
        self.window.show()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_Article()
    ui.setupArticle(MainWindow, 'jan')
    MainWindow.show()
    sys.exit(app.exec_())